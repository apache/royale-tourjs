<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<js:HView xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:js="library://ns.apache.org/flexjs/express"
				xmlns:basic="library://ns.apache.org/flexjs/basic"
			    width="100%" height="100%" initComplete="loadInitialData()">
    <fx:Script>
        <![CDATA[
			import org.apache.flex.collections.HierarchicalData;
			import org.apache.flex.collections.converters.JSONItemConverter;
			     
			[Bindable]
			private var tempExampleNames = [];
			
			[Bindable]
			private var contentData:HierarchicalData;
			
			private var currentExamples:Array;
			
			private function loadInitialData():void {
				service.url = "resources/content.json";
				service.send();
				service.addEventListener("complete", completeHandler);
			}
			
			private function completeHandler(event:Event):void
			{
				var data:String = service.data as String;
				var converter:JSONItemConverter = new JSONItemConverter();
				var obj:Object = converter.convertItem(data);
				contentData = new HierarchicalData(obj);
				contentTree.dataProvider = contentData;
			}
			
			private function treeChange():void
			{
				var node:Object = contentTree.selectedItem;
				if (node["type"] == "group") {
					exampleTitle.text = node["title"];
					exampleDescription.text = node["description"];
					codeArea.text = "";
				} else {
					exampleTitle.text = node["title"];
					exampleDescription.text = node["description"];
					codeArea.text = "";
					
					var exampleNames:Array = [];
					
					currentExamples = node["example"];
					for (var i:int=0; i < currentExamples.length; i++) {
						var item:Object = currentExamples[i];
						exampleNames.push(item["name"]);
					}
					
					// show the first (or only) one.
					if (currentExamples.length > 0) {
						showExampleSource(0);
					}
					
					buttonBar.dataProvider = exampleNames;
				}
			}
			
			private function codeLoaded(event:Event):void
			{
				var data:String = codeLoader.data as String;
				codeArea.text = data;
			}
			
			private function codeError(event:Event):void
			{
				codeArea.text = "Error loading this code example";
			}
			
			private function showExampleSource(index:int):void
			{
				var item:Object = currentExamples[index];
				
				codeLoader.url = "resources/" + item["source"];
				codeLoader.send();
				codeLoader.addEventListener("complete", codeLoaded);
				codeLoader.addEventListener("ioError", codeError);
			}
			
			private function changeExample():void
			{
				showExampleSource(buttonBar.selectedIndex);
			}
		]]>
    </fx:Script>
	
	<fx:Style>
		.Explorer {
			background-color: #FEFEFE;
			margin-right: 5px;
		}
		.ExplorerTree {
			border: none;
		}
		.RunningExample {
			margin-bottom: 5px;
		}
		.ExampleCode {
			background-color: #FEFEFE;
			border: 1px solid #000000;
		}
	</fx:Style>
	
	<js:beads>
		<js:HTTPService id="service" />
		<js:HTTPService id="codeLoader" />
	</js:beads>
	
		<js:Panel title="Component Explorer" width="25%" height="100%" className="Explorer">
			<basic:Tree id="contentTree" width="100%" 
						height="100%" 
						labelField="title" 
						className="ExplorerTree"
						change="treeChange()"/>
		</js:Panel>
		
		<js:VContainer width="74%" height="100%">
			<js:Panel title="Example" width="100%" height="50%" className="RunningExample">
				<js:beads>
					<js:VerticalLayout />
				</js:beads>
				<js:Label id="exampleTitle" width="100%" height="22" />
				<js:Label id="exampleDescription" width="100%" height="22" />
			</js:Panel>
			
			<js:VContainer width="100%" height="50%">
				<js:ButtonBar id="buttonBar" width="100%" height="10%" change="changeExample()" />
				<js:Container width="100%" className="ExampleCode" height="90%">
					<js:beads>
						<js:ScrollingViewport />
					</js:beads>
					<js:Label id="codeArea" width="100%"/>
				</js:Container>
			</js:VContainer>
			
		</js:VContainer>

</js:HView>
