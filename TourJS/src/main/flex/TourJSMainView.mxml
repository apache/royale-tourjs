<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<js:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		  	   xmlns:js="library://ns.apache.org/flexjs/basic"
			   xmlns:express="org.apache.flex.express.*"
			   initComplete="loadInitialData()">
    <fx:Script>
        <![CDATA[
		import org.apache.flex.collections.HierarchicalData;
		import org.apache.flex.collections.converters.JSONItemConverter;
		import org.apache.flex.events.Event;

		[Bindable]
		private var tempExampleNames = [];

		[Bindable]
		private var contentData:HierarchicalData;

		private var currentExamples:Array;
		private var currentExample:Object;

		private function loadInitialData():void
		{
			service.url = "resources/content.json";
			service.send();
		}

		private function onContentLoadingCompleteHandler(event:Event):void
		{
			var data:String = service.data as String;
			var converter:JSONItemConverter = new JSONItemConverter();
			var obj:Object = converter.convertItem(data);
			contentData = new HierarchicalData(obj);
			contentTree.dataProvider = contentData;
		}

		private function treeChange():void
		{
			var node:Object = contentTree.selectedItem;
			if (node["type"] == "group")
			{
				codeArea.text = "";
			} else
			{
				codeArea.text = "";
				var exampleNames:Array = [];

				currentExamples = node["example"];
				for (var i:int = 0; i < currentExamples.length; i++)
				{
					var item:Object = currentExamples[i];
					exampleNames.push(item["name"]);
				}

				// show the first (or only) one.
				if (currentExamples.length > 0)
				{
					showExampleSource(0);
				}

				buttonBar.dataProvider = exampleNames;
			}
		}

		private function onCodeLoadingCompleteHandler(event:Event):void
		{
			var data:String = codeLoader.data as String;
			codeArea.text = data;
		}

		private function onCodeLoadingIoError(event:Event):void
		{
			codeArea.text = "Error loading this code example";
		}

		private function showExampleSource(index:int):void
		{
			currentExample = currentExamples[index];

			codeLoader.url = "resources/" + currentExample["source"];
			codeLoader.send();

			runExample();
		}

		private function changeExample():void
		{
			showExampleSource(buttonBar.selectedIndex);
		}

		private function runExample():void
		{
			var item:Object = currentExample;
			var swfURL:String = "resources/" + item["module_swf"];
			var htmlURL:String = "resources/" + item["module_js"];

			exampleApp.loadApplication(swfURL, htmlURL);
		}
		]]>
    </fx:Script>
	
	<fx:Style>
		.Explorer {
			background-color: #FEFEFE;
			margin-right: 5px;
		}
		.ExplorerTree {
			border: none;
		}
		.RunningExample {
			margin-bottom: 5px;
			background-color: #FEFEFE;
			min-height: 150px;
		}
		.ExampleCode {
			background-color: #FEFEFE;
			border: 1px solid #000000;
		}
	</fx:Style>
	
	<js:beads>
		<js:HorizontalFlexLayout />
		<js:HTTPService id="service" complete="onContentLoadingCompleteHandler(event)"/>
		<js:HTTPService id="codeLoader" complete="onCodeLoadingCompleteHandler(event)" ioError="onCodeLoadingIoError(event)"/>
	</js:beads>
	
		<js:Panel title="Component Explorer" width="25%" className="Explorer">
			<js:beads>
				<js:VerticalFlexLayout />
			</js:beads>
			<js:Tree id="contentTree" width="100%"
						labelField="title"
						className="ExplorerTree"
						change="treeChange()"/>
		</js:Panel>
		
		<js:Group width="74%">
			<js:beads>
				<js:VerticalFlexLayout />
			</js:beads>
			<js:Panel id="topPanel" title="Example" width="100%" className="RunningExample">
				<js:beads>
					<js:VerticalFlexLayout grow="1"/>
				</js:beads>
				<js:SubAppLoader id="exampleApp" width="100%" />
			</js:Panel>
			
			<js:Group width="100%">
				<js:beads>
					<js:VerticalFlexLayout grow="1" />
				</js:beads>
				<js:ButtonBar id="buttonBar" width="100%" change="changeExample()">
					<js:beads>
						<js:HorizontalFlexLayout grow="1"/>
					</js:beads>
				</js:ButtonBar>
				<js:Container width="100%" className="ExampleCode">
					<js:beads>
						<js:VerticalFlexLayout grow="1"/>
						<js:ScrollingViewport />
					</js:beads>
					<express:MXMLViewer id="codeArea" width="100%"/>
				</js:Container>
			</js:Group>
		</js:Group>
</js:Group>
